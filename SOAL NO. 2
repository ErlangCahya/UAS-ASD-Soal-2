import java.util.*;

class hashTableKu {
    private ArrayList<ArrayList<String>> table;
    private int size;

    public hashTableKu(int size) {
        this.size = size;
        table = new ArrayList<>(size);
        for (int i = 0; i < size; i++) {
            table.add(new ArrayList<>());
        }
    }

    private int rumusHashTable(String key) {
        long hashValue = 0;
        for (char c : key.toCharArray()) {
            hashValue = (hashValue * 31 + c) % size;
        }
        return (int) hashValue;
    }
    
    
    public void insert(String key) {
        int index = rumusHashTable(key);
        ArrayList<String> bucket = table.get(index);
        if (!bucket.contains(key)) {
            bucket.add(key);
        }
    }

    public ArrayList<String> getKeys() {
        ArrayList<String> keys = new ArrayList<>();
        for (ArrayList<String> bucket : table) {
            keys.addAll(bucket);
        }
        return keys;
    }
}
